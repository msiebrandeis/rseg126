<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="the_sieve">
	<property environment="env" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="11" />
	<property name="source" value="11" />
	<property name="src.dir" location="src" />
	<property name="test.dir" location="src" />
	<property name="test.report.dir" location="src" />
	<property name="build.dir" location="bin" />
	<property name="build.test.dir" location="bin" />

	<path id="junit.class.path">
		<pathelement location="C:\Users\User\.p2\pool\plugins\org.junit_4.13.0.v20200204-1500.jar" />
		<pathelement location="C:\Users\User\.p2\pool\plugins\org.hamcrest.core_1.3.0.v20180420-1519.jar" />

		<pathelement location="${build.dir}" />
	</path>

	<path id="the_sieve.classpath">
		<pathelement location="bin" />
	</path>
	<path id="run.Sieve.classpath">
		<path refid="the_sieve.classpath" />
	</path>
	<target name="init">
		<mkdir dir="bin" />
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="bin" />
	</target>
	<target depends="clean" name="cleanall" />
	<target depends="build-subprojects,build-project" name="build" />
	<target name="build-subprojects" />
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
			<src path="src" />
			<classpath refid="the_sieve.classpath" />
		</javac>
	</target>
	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects" />
	<target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
		<copy todir="${ant.library.dir}">
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</copy>
		<unzip dest="${ant.library.dir}">
			<patternset includes="jdtCompilerAdapter.jar" />
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</unzip>
	</target>
	<target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
		<antcall target="build" />
	</target>
	<target name="sieve">
		<java classname="the_sieve.Sieve" failonerror="true" fork="yes">
			<classpath refid="run.Sieve.classpath" />
		</java>
	</target>

	<target name="junit">
		<junit printsummary="on" fork="true" haltonfailure="yes" errorProperty="test.failed" failureProperty="test.failed" logfailedtests="yes">
			<classpath refid="junit.class.path"  />
			<classpath>
				<pathelement location="${build.test.dir}" />
			</classpath>
			
			<test name="the_sieve.SieveTest" 
					haltonfailure="no" todir="${test.report.dir}">
					<formatter type="plain" />
					<formatter type="xml" />
				</test>
		</junit>
		<fail message="Test failed. Please see report." if="test.failed" />

	</target>
</project>
